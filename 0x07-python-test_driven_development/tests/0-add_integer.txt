# Test cases for add_integer function

#Import the add_integer function from the module
>>> add_integer = __import__('0-add_integer').add_integer

# Test case 1: Adding two positive integers
>>> add_integer(1, 2)
3

#Test case 2: Adding a positive integer and a negative integer
>>> add_integer(100, -2)
98

#Test case 3: Adding one integer (default value for b)
>>> add_integer(2)
100

#Test case 4: Adding two floating- point numbers (should cast them to integers)
>>> add_integer(100.3, -2)
98

# Test case 5: Attempting to add an integer and a string (should raise TypeError)
>>> try:
...     add_integer(4, "School")
... except TypeError as e:
...     print(str(e))  # Print the actual error message
b must be an integer
# Expecting "b must be an integer"

# Test case 6: Attempting to add None (should raise TypeError)
>>> try:
...     add_integer(None)
... except TypeError as e:
...     print(str(e))  # Print the actual error message
a must be an integer
# Expecting "a must be an integer"

# Test case 6: Attempting to add None (should raise TypeError)
>>> try:
...     add_integer(None)
... except TypeError as e:
...     print(str(e))  # Print the actual error message
a must be an integer
# Expecting "a must be an integer"

#Test case 7: Adding two large integers
>>> add_integer(1000000000, 999999999)
1999999999
