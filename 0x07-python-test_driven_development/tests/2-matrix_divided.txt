Test matrix_divided function
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test case 1: Dividing a matrix by 2
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

# Test case 2: Dividing a matrix by 0 (should raise ZeroDivisionError)
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test case 3: Dividing a non-matrix (should raise TypeError)
>>> matrix = [1, 2, 3]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test case 4: Dividing a matrix with rows of different sizes (should raise TypeError)
>>> matrix = [
...     [1, 2, 3],
...     [4, 5]
... ]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test case 5: Dividing a matrix by a float number
>>> matrix = [
...     [2.5, 5.0],
...     [10.0, 12.5]
... ]
>>> matrix_divided(matrix, 2.5)
[[1.0, 2.0], [4.0, 5.0]]
